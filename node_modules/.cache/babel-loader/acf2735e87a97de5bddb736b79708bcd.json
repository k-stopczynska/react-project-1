{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kstop\\\\OneDrive\\\\Pulpit\\\\projekty\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  //two ways of useState: uncommented is most common: \n  //we assign it separately for individual form, the second: \n  //we create an object of properties and use spread operator \n  //calling it so the data won't get lost\n  //the problem is that React is calling it instantly, so some data might\n  //get ost, that's why we  eventually call an anonymous function that will return prevstate\n  //and update the form => definitely to complicated, we won't do that this way\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\"); // const [userInput, setUserInput]= useState({\n  // enteredTitle: \"\",\n  //enteredAmount: \"\",\n  //entereddate: \"\"\n  //})\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  }; //setUserInput((prevState) => {\n  //  return {\n  //...prevState,\n  //enteredTitle: event.target.value,\n  //}\n  //})\n  //};\n\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  }; //setUserInput((prevState) => {\n  //  return {\n  //...prevState,\n  //enteredAmount: event.target.value,\n  //}\n  //})\n  //};\n\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  }; //setUserInput((prevState) => {\n  //  return {\n  //...prevState,\n  //entereddate: event.target.value,\n  //}\n  //})\n  //};\n\n\n  const submitHandler = event => {\n    event.preventDefault(); //if we use one usestate approach, we do have an object, but when we use three separate\n    //use state=> we need to create one for the form data\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(); //we use two way binding setting the initial value of forms after submitting9in the form we use props)\n    //we call this setEnteredSth function and establish enteredsth value to an empty string\n\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: enteredDate,\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"cQceuCgozgRBnFcek1NBqBcFFts=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData"],"sources":["C:/Users/kstop/OneDrive/Pulpit/projekty/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n    //two ways of useState: uncommented is most common: \r\n    //we assign it separately for individual form, the second: \r\n    //we create an object of properties and use spread operator \r\n    //calling it so the data won't get lost\r\n    //the problem is that React is calling it instantly, so some data might\r\n    //get ost, that's why we  eventually call an anonymous function that will return prevstate\r\n    //and update the form => definitely to complicated, we won't do that this way\r\n\r\n\r\n const [enteredTitle, setEnteredTitle] = useState(\"\");\r\nconst [enteredAmount, setEnteredAmount] = useState(\"\");\r\nconst [enteredDate, setEnteredDate] = useState(\"\");\r\n // const [userInput, setUserInput]= useState({\r\n   // enteredTitle: \"\",\r\n    //enteredAmount: \"\",\r\n    //entereddate: \"\"\r\n  //})\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  }\r\n    //setUserInput((prevState) => {\r\n      //  return {\r\n        //...prevState,\r\n        //enteredTitle: event.target.value,\r\n        //}\r\n  //})\r\n  //};\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  }\r\n    //setUserInput((prevState) => {\r\n      //  return {\r\n        //...prevState,\r\n        //enteredAmount: event.target.value,\r\n        //}\r\n  //})\r\n  //};\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  }\r\n    //setUserInput((prevState) => {\r\n      //  return {\r\n        //...prevState,\r\n        //entereddate: event.target.value,\r\n        //}\r\n    //})\r\n  //};\r\n\r\n  const submitHandler = (event) => {\r\nevent.preventDefault();\r\n\r\n//if we use one usestate approach, we do have an object, but when we use three separate\r\n//use state=> we need to create one for the form data\r\nconst expenseData = {\r\n    title: enteredTitle,\r\n    amount: enteredAmount,\r\n    date: new Date(enteredDate)\r\n}\r\n\r\nprops.onSaveExpenseData();\r\n\r\n//we use two way binding setting the initial value of forms after submitting9in the form we use props)\r\n//we call this setEnteredSth function and establish enteredsth value to an empty string\r\n\r\n\r\nsetEnteredTitle('');\r\nsetEnteredAmount('');\r\nsetEnteredDate('');\r\n}\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" value = {enteredTitle} onChange={titleChangeHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value = {enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value = {enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}